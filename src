from flask import Flask, request, jsonify
import json
from werkzeug.utils import secure_filename
import os

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024  # 16MB max file size

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400
    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400
    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        file.save(file_path)
        return analyze_configuration(file_path)
    return jsonify({'error': 'Invalid file type'}), 400

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() == 'json'

def analyze_configuration(file_path):
    with open(file_path, 'r') as file:
        config = json.load(file)
    
    issues = []
    if 'securityGroups' in config:
        for sg in config['securityGroups']:
            if '0.0.0.0/0' in sg.get('ingressRules', []):
                issues.append({
                    'type': 'Open Security Group',
                    'description': 'Security group allows unrestricted inbound access',
                    'recommendation': 'Restrict inbound rules to specific IP ranges or security groups'
                })
    
    # Add more security checks here
    
    return jsonify({
        'summary': f'Found {len(issues)} security issues',
        'issues': issues
    })

if __name__ == '__main__':
    app.run(debug=True)
